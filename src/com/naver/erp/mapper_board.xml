<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<!-- mapper 태그 선언 -->
<!--mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm-->
<mapper namespace="com.naver.erp.BoardDAO">

	<!--***************************************************-->
	<!-- 게시판 글 목록 구할 떄 사용할 where 절을 sql 태그 안에 선언하기 -->
	<!--***************************************************-->
	<sql id="boardWhere">
		<!--==================================================-->
		<!-- 만약 키워드가 null 이 아니고 길이가 0보다 크면 where 절에 참여하기-->
		<!--==================================================-->
		<if test="keyword1!=null and keyword1.length()>0">
			<!-- BoardSearchDTO 객체안의 keyword1 속성변수 안의 데이터를 -->
			<!-- mybatis 문법으로 ${keyword1} 형식으로 표현한다.-->
			<!-- $을 붙여 꺼내면 ' 없이 원본대로 그냥 나오고-->
			<!-- #을 붙여 꺼내면 문자열일 경우 ' 가 자동으로 붙어나온다-->
			<!-- 현재 아래 SQL 구문에서는 ' 없이 나와야함으로 $ 을 사용한다.-->
			and (
				upper(subject) like upper('%${keyword1}%')
				or upper(writer) like upper('%${keyword1}%')
				or upper(content) like upper('%${keyword1}%')
				or upper(email) like upper('%${keyword1}%')
				or to_char(reg_date,'YYYY-MM-DD') like upper('%${keyword1}%')
			)
		</if>
		
		<!--=============================-->
		<!--만약 BoardSearchDTO 객체의 속성변수 date 가 null 이 아니고 배열변수의 개수가 0 보다 크면-->
		<!--[주의] 체크박스 값이 저장되는 배열변수는 배열 객체는 있되 배열변수가 없을 수 있으므로 배열변수의 개수도 0 보다 큰지 확인한다.-->
		<!--=============================-->
		<if test="date!=null and date.length>0">
			and
			<!--====================================-->
			<!-- [mybatis foreach 반복문]의 속성 설명 -->
			<!--====================================-->
			<!-- 	collection="이 쿼리문에 참여하는 외부 데이터 중 배열 또는 ArrayList 객체의 메위주가 저장된 변수명" -->
			<!-- 	item="반복문 돌때마다 배열객체 또는 ArrayList 객체 안의 데이터를 하나씩 꺼내서 저장할 지역변수명" -->
			<!-- 	open="반복문 시작 전에 삽입할 문자" -->
			<!-- 	close="반복문 끝난 후에 삽입할 문자" -->
			<!-- 	separator="반복문에 의해 표현되는 쿼리문 사이 사이에 삽입될 쿼리일부분" -->
			<!-- 	index="반복문안에서 사용할 인덱스 번호 저장 변수명"	 -->
			<!--====================================-->
			<foreach collection="date"  item="date"  open="("  separator=" or " close=")">
				<!--=============================-->
				<!--만약 BoardSearchDTO 객체의 속성변수 date 에 문자열 "오늘" 이 저장되어 있으면-->
				<!--=============================-->
				<if test="date.equals('오늘')">
					to_char(sysdate,'YYYYMMDD') = to_char(reg_date,'YYYYMMDD')
				</if>
				<!--=============================-->
				<!--만약 BoardSearchDTO 객체의 속성변수 date 에 문자열 "어제" 이 저장되어 있으면-->
				<!--=============================-->
				<if test="date.equals('어제')">
					to_char(sysdate-1,'YYYYMMDD') = to_char(reg_date,'YYYYMMDD')
				</if>
			</foreach>
		</if>
	</sql>




	<!--***************************************************-->
	<!-- 게시판 글 출력 번호 1 증가하는 update 문을 내포한 update 태그 선언 -->
	<!--***************************************************-->
	<update id='updatePrintNo' parameterType="com.naver.erp.BoardDTO" >
		update board 
		set print_no=print_no+1
		where group_no=(select group_no from board where b_no=#{b_no})
			  and print_no>(select print_no from board where b_no=#{b_no})
	</update>


	<!--***************************************************-->
	<!-- 게시판 글 입력하는 insert 문을 내포한 insert 태그 선언 -->
	<!--***************************************************-->
		<!-- parameterType 속성은 안에 내장된 쿼리 호출하면서 삽입되는 데이터의 자료형을 지정함. -->
		<!-- insert 태그안에는 resultType 속성이 없다. 리턴값은 자동으로 int 형이다. -->
		<!-- insert,update,delete 태그도 동일하다. -->
	<insert id='insertBoard' parameterType="com.naver.erp.BoardDTO" >
		insert into board( 
			b_no
			,subject
			,writer
			,readcount
			,content
			,pwd
			,email
			,group_no
			,print_no
			,print_level 
		) values ( 
			(select nvl(max(b_no),0)+1 from board)
			,#{subject}    <!-- BoardDTO 객체의 subject 속성변수 안의 값 삽입하기. 문자면 ' 를 앞뒤에 붙여준다.-->
			,#{writer}     <!-- BoardDTO 객체의 writer 속성변수 안의 값 삽입하기. 문자면 ' 를 앞뒤에 붙여준다.-->
			,0      
			,#{content}    <!-- BoardDTO 객체의 content 속성변수 안의 값 삽입하기. 문자면 ' 를 앞뒤에 붙여준다.-->
			,#{pwd}        <!-- BoardDTO 객체의 pwd 속성변수 안의 값 삽입하기. 문자면 ' 를 앞뒤에 붙여준다.-->
			,#{email}      <!-- BoardDTO 객체의 email 속성변수 안의 값 삽입하기. 문자면 ' 를 앞뒤에 붙여준다.-->
			<!--***********************************************
			만약에 자바의 BoardDTO 객체의 속성변수 b_no 가  0보이면,  즉 새글쓰기 모드면 
			그룹번호를 PK 값으로, 출력순서 번호와 들여쓰기 레벨은 0 으로 입력하기 
			***********************************************-->
			<if test="b_no==0">
				,(select nvl(max(b_no),0)+1 from board)   <!-- 그룹번호를 PK 값으로 삽입-->
				,0                                        <!-- 같은 그룹내에 출력 순서번호 0 삽입-->
				,0                                        <!-- 들여쓰기 레벨번호 0 삽입-->
			</if>
			<!--***********************************************
			만약에 자바의 BoardDTO 객체의 속성변수 b_no 가  0보다 크면,  즉 댓글쓰기 모드면 
			그룹번호를 엄마 PK 번호로, 출력순서 번호와 들여쓰기 레벨은
			엄마꺼보다 1 더 큰 값으로 입력하기 
			***********************************************-->
			<if test="b_no>0">
				,(select group_no from board where b_no=#{b_no})
				,(select print_no+1 from board where b_no=#{b_no})	
				,(select print_level+1 from board where b_no=#{b_no})
			</if>
		)

	</insert>







	<!--**************************************************************************-->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!--**************************************************************************-->
	<select id="getBoardList" parameterType="com.naver.erp.BoardSearchDTO"  resultType="java.util.HashMap">
		select * from (select zzz.*, rownum||'' "RNUM" from (
						select 
							b_no||''                                "b_no" 
							, subject                               "subject"
							, writer                                 "writer" 
							, readcount||''                          "readcount" 
							, to_char(reg_date, 'YYYY-MM-DD')||''    "reg_date" 
							, print_level||''                        "print_level" 
						from board
						where 1=1 
						<!--=============================-->
						<!--<sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기-->
						<!--=============================-->
						<include refid="boardWhere"/>

						<!--=============================-->
						<!-- 만약에 BoardSearchDTO 객체 안의 속성변수 orderby 에 null 또는 "" 가 저장되어 있으면-->
						<!--=============================-->
						<if test="orderby==null or orderby.length()==0">
							order by  group_no desc , print_no asc
						</if>
						<!--=============================-->
						<!-- 만약에 BoardSearchDTO 객체 안의 속성변수 orderby 에 null 이 아니고 문자의 길이가 있으면-->
						<!--=============================-->
						<if test="orderby!=null and orderby.length()>0">
							order by ${orderby} , reg_date desc
						</if>


		<![CDATA[
			) zzz where rownum <=${selectPageNo*rowCntPerPage} ) 
			where RNUM >=  ${selectPageNo*rowCntPerPage-rowCntPerPage+1} 
		]]>
	</select>














	<!--*************************************************************-->
	<!-- 게시판 글 목록 총 개수 구하는  select 태그 선언-->
	<!--*************************************************************-->
	<select id="getBoardListAllCnt" parameterType="com.naver.erp.BoardSearchDTO"   resultType="int">
		select 
			count(*) 
		from board	
		where 1=1 
		<!--=============================-->
		<!--<sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기-->
		<!--=============================-->
		<include refid="boardWhere"/>
	</select>















	<!--*************************************************************-->
	<!-- 게시판 1개 글 검색하는 select 문을 내포한 select 태그 선언-->
	<!--*************************************************************-->
	<select id="getBoard" parameterType="int" resultType="com.naver.erp.BoardDTO">
		select 
			b_no 		 "b_no"
			,subject 	 "subject"
			,writer 	 "writer"
			,reg_date    "reg_date" 
			,readcount   "readcount"
			,content 	  "content"
			,pwd 		  "pwd"
			,email 		  "email"
			,group_no	  "group_no"
			,print_no	  "print_no"
			,print_level  "print_level"
		from board 
		where b_no=#{b_no}
	</select>
	
	<!-- **************************************************** -->
	<!-- 게시판 1개 글 수정하는 update 문을 내포한 update 태그 선언 -->
	<!-- **************************************************** -->
	<update id="updateReadcount" parameterType="int">
		update board set readcount = readcount+1
		where b_no=#{b_no}
	</update>






	<!-- **************************************************** -->
	<!-- 삭제/수정할 게시판의 존재 개수를 리턴하는 select 선언 -->
	<!-- **************************************************** -->
	<select id="getBoardCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board where b_no=#{b_no}
	</select>


	<!-- **************************************************** -->
	<!-- 삭제/수정할 게시판의 비밀번호 개수를 리턴하는 select 선언 -->
	<!-- **************************************************** -->
	<select id="getPwdCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board where b_no=#{b_no} and pwd=#{pwd}
	</select>

	<!-- **************************************************** -->
	<!-- 게시판 수정 후 수정행의 적용 개수를 리턴하는 메소드 선언 -->
	<!-- **************************************************** -->
	<update id="updateBoard" parameterType="com.naver.erp.BoardDTO">
		update
			board
		set
			subject = #{subject}
			,writer = #{writer}
			,content = #{content}
			,email = #{email}
		where
			b_no=#{b_no} and pwd=#{pwd}
	</update>







	<!-- **************************************************** -->
	<!-- 삭제할 게시판의 자식글 존재 개수를 리턴하는 select 선언-->
	<!-- **************************************************** -->
	<select id="getChildrenCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board
		where group_no=(select group_no from board where b_no = #{b_no})
			and print_no=(select print_no+1 from board where b_no = #{b_no})
			and print_level=(select print_level+1 from board where b_no = #{b_no})
	</select>

	<!-- **************************************************** -->
	<!-- 삭제될 게시판 이후 글의 출력 순서번호를 1씩 감소 시킨 후 수정 적용행의 개수를 리턴하는 update 선언 -->
	<!-- **************************************************** -->
	<update id="downPrintNo" parameterType="com.naver.erp.BoardDTO">
		update board set print_no = print_no-1
		where group_no=(select group_no from board where b_no = #{b_no})
			and print_no >(select print_no from board where b_no = #{b_no})
	</update>
	
	<!-- **************************************************** -->
	<!-- 게시판 삭제 명령한 후 삭제 적용행ㅇ의 개수를 리턴하는 delete 선언-->
	<!-- **************************************************** -->
	<delete id="deleteBoard" parameterType="com.naver.erp.BoardDTO">
		delete from board where b_no=#{b_no} and pwd=#{pwd}
	</delete>



</mapper>